{"version":3,"sources":["components/UserInfo/UserInfo.tsx","api/users.ts","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/todos.ts","components/OptionInfo/OptionInfo.tsx","components/OptionList/OptionList.tsx","App.tsx","index.tsx"],"names":["UserInfo","user","name","email","className","href","id","username","TodoInfo","todo","title","completed","userId","users","find","item","classNames","TodoList","todos","map","OptionInfo","value","String","OptionList","App","useState","setTitle","titleError","setTitleError","selectedUserId","setSelectedUserId","userError","setUserError","todosFromServer","setTodos","action","method","onSubmit","event","preventDefault","newTodo","Math","max","prevTodos","addTodo","type","onChange","normalizedValue","target","replaceAll","placeholder","disabled","usersFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1b4ad644.chunk.js","sourcesContent":["import './UserInfo.scss';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import classNames from 'classnames';\n\nimport './TodoInfo.scss';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\nimport users from '../../api/users';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n\n  const user = users.find(item => item.id === userId);\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        key={todo.id}\n        todo={todo}\n        data-id={todo.id}\n      />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const OptionInfo: React.FC<Props> = ({ user }) => {\n  const { id, name } = user;\n\n  return (\n    <option\n      value={String(id)}\n    >\n      {name}\n    </option>\n  );\n};\n","import { User } from '../../types/User';\nimport { OptionInfo } from '../OptionInfo';\n\ntype Props = {\n  users: User[],\n};\n\nexport const OptionList: React.FC<Props> = ({ users }) => (\n  <>\n    {users.map(user => <OptionInfo key={user.id} user={user} />)}\n  </>\n);\n","import { useState } from 'react';\n\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { OptionList } from './components/OptionList';\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [userError, setUserError] = useState(false);\n\n  const [todos, setTodos] = useState(todosFromServer);\n\n  const addTodo = () => {\n    const id = Math.max(...todos.map(todo => todo.id)) + 1;\n    const newTodo = {\n      id,\n      title,\n      completed: false,\n      userId: selectedUserId,\n    };\n\n    setTodos(prevTodos => [...prevTodos, newTodo]);\n  };\n\n  const onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!title) {\n      setTitleError(true);\n    }\n\n    if (!selectedUserId) {\n      setUserError(true);\n    }\n\n    if (!title || !selectedUserId) {\n      return;\n    }\n\n    addTodo();\n    setTitle('');\n    setSelectedUserId(0);\n    setTitleError(false);\n    setUserError(false);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const pattern = /[^0-9A-Za-zА-яЇїЄєҐґ ]/g;\n\n    const normalizedValue = event.target.value.replaceAll(pattern, '');\n\n    setTitle(normalizedValue);\n    setTitleError(false);\n  };\n\n  const handleSUserSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserId(+event.target.value);\n    setUserError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={onSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:&nbsp;\n\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={title}\n              onChange={handleTitleChange}\n              placeholder=\"Enter a title\"\n            />\n          </label>\n\n          {titleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:&nbsp;\n\n            <select\n              data-cy=\"userSelect\"\n              value={selectedUserId}\n              onChange={handleSUserSelect}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n\n              <OptionList users={usersFromServer} />\n            </select>\n          </label>\n\n          {userError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}